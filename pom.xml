<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.eclipse.ee4j</groupId>
  <artifactId>cargo-tracker</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Eclipse Cargo Tracker</name>
  <description>
    The project demonstrates how you can develop applications with the Jakarta EE platform using widely
    adopted architectural best practices like Domain-Driven Design (DDD).
  </description>
  <url>https://projects.eclipse.org/projects/ee4j.cargotracker/</url>

  <organization>
    <name>Eclipse Foundation</name>
    <url>https://www.eclipse.org/org/foundation/</url>
  </organization>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/eclipse-ee4j/cargotracker/issues</url>
  </issueManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>

    <jakartaee-api.version>10.0.0</jakartaee-api.version>



    <!-- Codehaus Cargo plugin properties -->
    <cargo.version>1.10.5</cargo.version>
    <cargo.payara.container_id>glassfish6x</cargo.payara.container_id>
    <cargo.payara.download_uri>
      https://repo1.maven.org/maven2/fish/payara/distributions/payara/6.2023.12/payara-6.2023.12.zip
    </cargo.payara.download_uri>

    <!-- Application properties -->
    <webapp.databaseTempDir>/tmp</webapp.databaseTempDir>
    <webapp.graphTraversalUrl>
      http://localhost:8080/cargo-tracker/rest/graph-traversal/shortest-path
    </webapp.graphTraversalUrl>
  </properties>



  <dependencies>

    <!-- Jakarta EE API -->
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${jakartaee-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- TODO: remove and use proper rest with servlet 3,0 and no web.xml-->
    <dependency>
    <groupId>org.glassfish.jersey.containers</groupId>
    <artifactId>jersey-container-servlet-core</artifactId>
    <version>2.28</version>
    <scope>provided</scope>
  </dependency>

    <!-- TODO: remove -->
    <!-- TODO: update code to match jdk21  standards -->
  <dependency>
    <groupId>org.glassfish.jersey.media</groupId>
    <artifactId>jersey-media-moxy</artifactId>
    <version>2.28</version>
  </dependency>

    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <version>5.0</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <!-- The third-party dependencies this application has -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.10.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>primefaces</artifactId>
      <version>12.0.0</version>
      <classifier>jakarta</classifier>
    </dependency>

    <!-- Test dependencies -->
    <!-- TODO: switch Itests to test containers  -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.19.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>1.19.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>5.4.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>cargo-tracker</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.3</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.3</version>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>payara</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${cargo.version}</version>
            <configuration>
              <container>
                <containerId>${cargo.payara.container_id}</containerId>
                <zipUrlInstaller>
                  <url>${cargo.payara.download_uri}</url>
                </zipUrlInstaller>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>